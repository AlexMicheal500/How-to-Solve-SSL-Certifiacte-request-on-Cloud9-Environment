If you do not have a domain name, 
1. visit https://www.noip.com/
2. Go to signup and register for a new domain name
3. Activate from email address
4. Go to Manage DNS
5.Go to Dynamic DNS at the lft hand side and go to "No-IP Hostname".
6. Change your target IP to your own address

NOTE: In a docker enviromnent, to reset password, we use: 
docker exec -it gitlab-ce grep 'Password:' /etc/gitlab/initial_root_password 
The above will get the root password. Then when you enter the GUI and login with default username= root... Then go to Admin icon and change the password


To configure certificate to gitlab, follow the documentation https://docs.gitlab.com/omnibus/settings/ssl.html
1. In your gitlab server got to gilab.rb using the following commands:
	cd /etc/gitlab/
	nano gitlab.rb
Then copy:
letsencrypt['enable'] = true                      # GitLab 10.5 and 10.6 require this option
external_url "https://gitlab.example.com"         # Must use https protocol
letsencrypt['contact_emails'] = ['foo@email.com'] # Optional

Copy the above into gitlab.rb and remove external url present in the file formerly present.
Then run the following commands for manaual lets encrypt Renewal:
sudo gitlab-ctl reconfigure
sudo gitlab-ctl renew-le-certs

NOTE: GITLAB RUNNER REGISTRATION SHOULD BE DONE IN THE GITLAB SERVER.
Run gitlab runner in a container using the following:(Documentation - https://docs.gitlab.com/runner/install/docker.html ) 
Option 1: Use local system volume mounts to start the Runner container
docker run -d --name gitlab-runner --restart always \
  -v /srv/gitlab-runner/config:/etc/gitlab-runner \
  -v /var/run/docker.sock:/var/run/docker.sock \
  gitlab/gitlab-runner:latest
  
Next Step is to register runner by installing GitLab Runner in a container.
docker run --rm -it -v /srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner register
To complete the registration, follow the documentation https://docs.gitlab.com/runner/register/index.html#docker 
and follow the direction of docker from point 2 to point 8

Then to make sure the runner runs visit the link 
https://stackoverflow.com/questions/53370840/this-job-is-stuck-because-the-project-doesnt-have-any-runners-online-assigned
Then the runner will work.

After trying your job, when you still findout that it is still failing, do the following:
On your server, check if you have gitlab-runner container running using
docker ps
Go into the gitlab-runner container using:
 docker exec -it <gitlab-runner hash> /bin/bash
Change the configuration beusing the following commands:
cd /etc/gitlab-runner
nano config.toml
Then change Priviledged from false to true
Priviledged = true
An example of how it should look like is.....
concurrent = 1
check_interval = 0

[session_server]
  session_timeout = 1800

[[runners]]
  name = "Test-Runner"
  url = "https://alexgitlab.ddns.net/"
  token = "_bZKs4oJSMqunLzNARK8"
  executor = "docker"
  [runners.custom_build_dir]
  [runners.cache]
    [runners.cache.s3]
    [runners.cache.gcs]
    [runners.cache.azure]
  [runners.docker]
    tls_verify = false
    image = "alpine"
    privileged = true
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = ["/cache"]
    shm_size = 0
    
  Finnaly exit by using the below command:
  $exit
  $ docker restart <gitlab-runner hash>
  $docker ps (This is to check if it has restarted)

Wait a little, go to incognito and use the domain name created to log into gitlab.
